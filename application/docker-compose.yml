version: '3.8'
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"

services:
  traefik:
    image: traefik:v2.10.1
    restart: unless-stopped
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--api"
      - "--certificatesresolvers.letsencryptresolver.acme.email=kapil.kumaria@gmail.com"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencryptresolver.acme.tlschallenge=true"
      - "--accesslog=true"
      - "--log.level=ERROR"
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/ubuntu/cv-challenge01/traefik/letsencrypt/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.traefik-http.rule=Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.services.traefik-http.loadbalancer.server.port=8080"
      # www to non-www redirect
      - "traefik.http.routers.traefik-https.middlewares=www-to-non-www"
      # HTTP to HTTPS redirect
      - "traefik.http.middlewares.www-to-non-www.redirectregex.regex=^https?://www\\.(.+)"
      - "traefik.http.middlewares.www-to-non-www.redirectregex.replacement=https://$1"
      - "traefik.http.middlewares.www-to-non-www.redirectregex.permanent=true"
      # HTTPS Router
      - "traefik.http.routers.traefik-https.rule=Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)"
      - "traefik.http.routers.traefik-https.entrypoints=websecure"
      - "traefik.http.routers.traefik-https.service=api@internal"
      - "traefik.http.routers.traefik-https.tls.certresolver=letsencryptresolver"
      # Middlewares Rewrites
      - "traefik.http.middlewares.rewrite-overview.replacepathregex.regex=/api/overview"
      - "traefik.http.middlewares.rewrite-overview.replacepathregex.replacement=/api/v1/openapi.json"
      #- "traefik.http.routers.backend.middlewares=rewrite-overview"
    networks:
      - app_network      

  frontend:
    build:
      context: ../frontend # Adjust the path to your frontend directory  
    env_file:
      - ../frontend/.env    
    container_name: frontend
    # environment:
    #   - NGINX_REWRITE=/api/overview:/api/v1/openapi.json
    depends_on:
      - backend # Ensure the backend service starts first
    ports:
      - "5173:5173"    
    labels:   
      - "traefik.enable=true"      
      # HTTP Router
      - "traefik.http.routers.frontend-http.rule=(Host(`boss.kapilkumaria.com`)  || Host(`www.boss.kapilkumaria.com`))"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      # - "traefik.http.services.frontend.loadbalancer.server.port=5173"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # www to non-www redirect
      - "traefik.http.routers.frontend-https.middlewares=www-to-non-www"
      # HTTPS Router
      - "traefik.http.routers.frontend-https.rule=(Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`))"
      - "traefik.http.routers.frontend-https.entrypoints=websecure"
      - "traefik.http.routers.frontend-https.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.frontend-https.service=frontend" # optional
    networks:
      - app_network
    logging: *default-logging

  backend:
    build:
      context: ../backend   
      dockerfile: Dockerfile
    env_file:
      - ../backend/.env   
    container_name: backend
    depends_on:
      - db  
    labels:      
        - traefik.enable=true
        # HTTP Router
        - traefik.http.routers.backend-http.rule=((Host(`boss.kapilkumaria.com`)  || Host(`www.boss.kapilkumaria.com`)) && (PathPrefix(`/api/v1`) || PathPrefix(`/redoc`) || PathPrefix(`/docs`)))
        - traefik.http.routers.backend-http.entrypoints=web
        - traefik.http.services.backend-http.loadbalancer.server.port=8000
        # www to non-www redirect
        - "traefik.http.routers.backend-https.middlewares=www-to-non-www"
        # HTTPS Router
        - traefik.http.routers.backend-https.rule=(Host(`boss.kapilkumaria.com`) && (PathPrefix(`/api/v1`) || PathPrefix(`/redoc`) || PathPrefix(`/docs`)))
        - traefik.http.routers.backend-https.entrypoints=websecure
        - traefik.http.routers.backend-https.tls.certresolver=letsencryptresolver
    networks:
      - app_network    
      
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123          
    networks:
      - app_network   

  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: db
      #ADMINER_DESIGN: galkaev    
    labels:
        - traefik.enable=true
        # HTTP Router
        - traefik.http.routers.adminer-http.rule=Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)
        - traefik.http.routers.adminer-http.entrypoints=web
        - traefik.http.services.adminer.loadbalancer.server.port=8080
        # www to non-www redirect
        - "traefik.http.routers.adminer-https.middlewares=www-to-non-www"
        # HTTPS Router
        - traefik.http.routers.adminer-https.rule=Host(`boss.kapilkumaria.com`) || Host(`www.boss.kapilkumaria.com`)
        - traefik.http.routers.adminer-https.entrypoints=websecure
        - traefik.http.routers.adminer-https.tls.certresolver=letsencryptresolver
    networks:
      - app_network
    #logging: *default-logging

networks:
  app_network:
    external: true