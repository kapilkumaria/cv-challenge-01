version: '3.8'

services:
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80"      # HTTP traffic
      - "443:443"    # HTTPS traffic
      - "81:81"      # Admin UI for NPM
    volumes:
      - ./npm_data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - app_network
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://backend:8000 # Backend service URL (internal networking)
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network

  backend:
    build:
      context: ./backend
    container_name: backend
    environment:
      POSTGRES_URL: postgresql://app:kapil123@db:5432/app # Use internal networking for DB
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app_network

  db:
    image: postgres:13-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: kapil123
      POSTGRES_DB: app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
    driver: local
  npm_data:
    driver: local

networks:
  app_network:
    external: true

